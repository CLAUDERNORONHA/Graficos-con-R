[
["index.html", "Gráficos con R Bienvenido Estructura del libro Software y convenciones Bloques informativos", " Gráficos con R Freddy Hernández Juan Carlos Correa 2019-07-04 Bienvenido Este libro está destinado para estudiantes de ingeniería y estadística que deseen aprender sobre modelos de regresión y la forma de aplicarlos por medio del lenguaje de programación R. Freddy Hernández Juan Carlos Correa Estructura del libro En el capítulo 1 se presenta el modelo de regresión lineal simple y en el Capítulo ?? se generaliza el modelo básico con varias covariables. Software y convenciones Para realizar este libro usamos los paquetes knitr (Xie 2015) y bookdown (Xie 2018) que permiten unir la ventajas de LaTeX y R en un mismo archivo. En todo el libro se presentarán códigos que el lector puede copiar y pegar en su consola de R para obtener los mismos resultados aquí del libro. Los códigos se destacan en una caja de color similar a la mostrada a continuación. 4 + 6 a &lt;- c(1, 5, 6) 5 * a 1:10 Los resultados o salidas obtenidos de cualquier código se destacan con dos símbolos de númeral (##) al inicio de cada línea o renglón, esto quiere decir que todo lo que inicie con ## son resultados obtenidos y NO los debe copiar. Abajo se muestran los resultados obtenidos luego de correr el código anterior. ## [1] 10 ## [1] 5 25 30 ## [1] 1 2 3 4 5 6 7 8 9 10 Bloques informativos En varias partes del libro usaremos bloques informativos para resaltar algún aspecto importante. Abajo se encuentra un ejemplo de los bloques y su significado. Nota aclaratoria. Sugerencia. Advertencia. References "],
["rls.html", "1 Regresión lineal simple Modelo estadístico Función lm Clase lm", " 1 Regresión lineal simple En este capítulo se presenta una descripción breve del modelo de regresión lineal simple y la forma de estimar los parámetros del modelo con R. Modelo estadístico El modelo estadístico en regresión lineal simple se puede escribir de dos formas como se muestra a continuación. En esta forma la variable respuesta \\(y\\) se expresa como una suma de \\(\\beta_0 + \\beta_1 x_i\\) y un error aleatorio \\(e_i\\) el cual tiene distribución \\(N(0, \\sigma^2)\\). El modelo en esta forma se puede expresar como sigue. \\[\\begin{align} \\label{mod1} y_i &amp;= \\beta_0 + \\beta_1 x_i + e_i, \\\\ e_i &amp;\\sim N(0, \\sigma^2) \\end{align}\\] En esta forma la variable respuesta \\(y\\) tiene distribución normal con media que cambia en función de la variable \\(x\\) pero con varianza constante. El modelo en esta forma se puede expresar como sigue. \\[\\begin{align} \\label{mod2} y_i &amp;\\sim N(\\mu_i, \\sigma^2), \\\\ \\mu_i &amp;= \\beta_0 + \\beta_1 x_i, \\\\ \\sigma^2 &amp;= \\text{constante} \\end{align}\\] En cualquiera de las dos formas el vector de parámetros del modelo es \\(\\boldsymbol{\\theta}=(\\beta_0, \\beta_1, \\sigma)^\\top\\). Función lm La función lm de R se usa para ajustar un modelo de regresión lineal simple, la estructura de esta función se muestra a continuación. lm(formula, data, subset, weights, na.action, method = &quot;qr&quot;, model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, contrasts = NULL, offset, ...) A continuación se presenta una corta descripción de los parámetros más usados en la función. formula: es un objeto de la clase fórmula para indicar la variable respuesta y las covariables. Por ejemplo, si formula = y ~ x1 + x2 lo que se indica es que la variable respuesta es y, las covariables serían x1 y x2. data: es el marco de datos donde se buscarán las variables usadas en la fórmula. Si este parámetro queda vacío, R buscará las variables en el ambiente global. Ejemplo Como ilustración vamos a usar los datos del ejemplo 2.1 del libro de Montgomery, Peck and Vining (2003). En el ejemplo 2.1 los autores ajustaron un modelo de regresión lineal simple para explicar la Resistencia de una soldadura en función de la Edad de la misma. A continuación el código para cargar los datos y una muestra de las 6 primeras observaciones de la base de datos, en total tenemos 20 observaciones. file &lt;- &quot;https://raw.githubusercontent.com/fhernanb/datos/master/propelente&quot; datos &lt;- read.table(file=file, header=TRUE) head(datos) # shows the first 6 rows ## Resistencia Edad ## 1 2158.70 15.50 ## 2 1678.15 23.75 ## 3 2316.00 8.00 ## 4 2061.30 17.00 ## 5 2207.50 5.50 ## 6 1708.30 19.00 Para crear un diagrama de dispersión que nos muestre la relación entre las dos variables usamos las siguientes instrucciones. library(ggplot2) ggplot(datos, aes(x=Edad, y=Resistencia)) + geom_point() + theme_light() De la figura anterior se ve claramente que a medida que aumenta la edad de la soldadura, la resistencia que ella ofrece disminuye. Adicionalmente, se observa que la relación entre las variables es lineal con una dispersión que parece constante. El modelo que se va a ajustar se muestra a continuación. \\[\\begin{align} Resistencia_i &amp;\\sim N(\\mu_i, \\sigma^2), \\\\ \\mu_i &amp;= \\beta_0 + \\beta_1 Edad_i, \\\\ \\sigma^2 &amp;= \\text{constante} \\end{align}\\] Para obtener las estimaciones de los parámetros del modelo anterior se usa el código mostrado abajo. La función lm se aplica con la fórmula Resistencia ~ Edad para indicar que Resistencia es la variable respuesta y que Edad es la variable explicativa. Los resultados del la función lm se almacenan en el objeto mod1 para luego poder usar el modelo ajustado. La segunda línea del código mostrado abajo se usa para mostrar por pantalla un reporte sencillo del modelo ajustado. mod1 &lt;- lm(Resistencia ~ Edad, data=datos) mod1 # Para imprimir el objeto mod1 ## ## Call: ## lm(formula = Resistencia ~ Edad, data = datos) ## ## Coefficients: ## (Intercept) Edad ## 2627.82 -37.15 En la salida anterior se observan los valores estimados de \\(\\beta_0\\) y \\(\\beta_1\\) pero no aparece la estimación de \\(\\sigma\\). Para obtener una tabla de resumen con detalles del modelo ajustado, se usa la función genérica summary, a continuación el código necesario para obtener la tabla. summary(mod1) La siguiente figura muestra el resultado del código anterior. En la figura se resalta la información sobre los residuales y las estimaciones de \\(\\beta_0\\), \\(\\beta_1\\) y \\(\\sigma\\). Figure 1.1: Tabla de resumen para un modelo lineal. Con los resultados anteriores se puede expresar el modelo ajustado como se muestra a continuación. \\[\\begin{align} \\widehat{Resistencia}_i &amp;\\sim N(\\hat{\\mu}_i, \\hat{\\sigma}^2), \\\\ \\hat{\\mu}_i &amp;= 2627.822 -37.154 \\, Edad_i, \\\\ \\hat{\\sigma} &amp;= 96.11 \\end{align}\\] Para incluir la recta de regresión que representa el modelo ajustado anterior se puede usar el siguiente código. ggplot(datos, aes(x=Edad, y=Resistencia)) + geom_point() + geom_smooth(method=&#39;lm&#39;, formula=y~x, se=FALSE, col=&#39;dodgerblue1&#39;) + theme_light() Clase lm Todo objeto creado con la función lm( ) es de la clase lm, para verificar esto podemos escribir lo siguiente en la consola. class(mod1) ## [1] &quot;lm&quot; Dentro de todo objeto de la clase lm hay doce elementos o valores que se pueden utilizar. A continuación se muestra el código para saber los nombres de esos elementos. names(mod1) ## [1] &quot;coefficients&quot; &quot;residuals&quot; &quot;effects&quot; &quot;rank&quot; ## [5] &quot;fitted.values&quot; &quot;assign&quot; &quot;qr&quot; &quot;df.residual&quot; ## [9] &quot;xlevels&quot; &quot;call&quot; &quot;terms&quot; &quot;model&quot; Cualquiera de los anteriores elementos se pueden extraer usando el operador $ entre el objeto y el elemento, por ejemplo, para extraer los coeficientes estimados se escribe lo siguiente: mod1$coefficients ## (Intercept) Edad ## 2627.82236 -37.15359 Los nombres de los elementos dan una idea clara de lo que ellos almacenan, si el lector quiere más detalles sobre los elementos, sólo debe solicitar la ayuda de la función con help(lm) y en la sección de Value encontrará la información. En el siguiente código se utiliza para extraer el elemento $fitted.value que contiene los valores predichos o ajustados \\(\\hat{y}_i\\). mod1$fitted.values ## 1 2 3 4 5 6 7 8 ## 2051.942 1745.425 2330.594 1996.211 2423.478 1921.904 1736.136 2534.938 ## 9 10 11 12 13 14 15 16 ## 2349.170 2219.133 2144.826 2488.496 1698.983 2265.575 1810.443 1959.058 ## 17 18 19 20 ## 2404.901 2163.402 2553.515 1829.020 A continuación se muestra el código para extraer el elemento $residuals que contiene los residuales usuales \\(e_i= y_i - \\hat{y}_i\\). mod1$residuals ## 1 2 3 4 5 6 ## 106.758301 -67.274574 -14.593631 65.088687 -215.977609 -213.604131 ## 7 8 9 10 11 12 ## 48.563824 40.061618 8.729573 37.567141 20.374323 -88.946393 ## 13 14 15 16 17 18 ## 80.817415 71.175153 -45.143358 94.442278 9.499187 37.097528 ## 19 20 ## 100.684823 -75.320154 Los valores ajustados y los residuales también se pueden recuperar usando las funciones fitted( ) y residuals( ). Consulte la ayuda de estas funciones para conocer otros detalles. Ejemplo Aquí se retoma el ejemplo de Resistencia en función de la Edad. El objetivo es crear una diagrama de dispersión con los puntos originales \\((x_i, y_i)\\), las estimaciones \\(\\hat{y}_i\\) y los residuales \\(e_i\\). Lo primero que se debe hacer es agregar a los datos originales el vector con las estimaciones \\(\\hat{y}_i\\), el código necesario se muestra a continuación. datos$predicciones &lt;- predict(mod1) En el diagrama dispersión los puntos originales \\((x_i, y_i)\\) estarán en color negro y los puntos correspondientes a las estimaciones \\((x_i, \\hat{y}_i)\\) estarán en color rojo, estos últimos coincidirán con la recta estimada en color gris. Los residuales \\(e_i\\) se mostrarán como líneas a trazos de color rojo. El código necesario se muestra a continuación. ggplot(datos, aes(x=Edad, y=Resistencia)) + geom_smooth(method=&quot;lm&quot;, se=FALSE, color=&quot;lightgrey&quot;) + geom_segment(aes(xend=Edad, yend=predicciones), col=&#39;red&#39;, lty=&#39;dashed&#39;) + geom_point() + geom_point(aes(y=predicciones), col=&#39;red&#39;) + theme_light() "]
]
